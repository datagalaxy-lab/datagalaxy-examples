apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: custom-job-ha
spec:
  image: library/cdc-flink-job:1.20.1-v1.0
  flinkVersion: v1_20
  flinkConfiguration:
    taskmanager.numberOfTaskSlots: "2"

    s3.access.key: minio
    s3.secret.key: minio123
    s3.endpoint: http://minio-service.default.svc.cluster.local:9000
    s3.path.style.access: "true"
    s3.entropy.key: _entropy_
    s3.entropy.length: "4"

    execution.checkpointing.interval: "1200000"
    execution.checkpointing.timeout: "1800000"
    execution.checkpointing.tolerable-failed-checkpoints: "3"


    state.backend: rocksdb
    state.backend.incremental: "true"
    state.checkpoints.dir: s3://flink-data/_entropy_/checkpoints
    state.savepoints.dir: s3://flink-data/savepoints

    high-availability.type: kubernetes
    high-availability.storageDir: s3://flink-data/ha
  serviceAccount: flink
  jobManager:
    resource:
      memory: "1024m"
      cpu: 2
  taskManager:
    resource:
      memory: "1024m"
      cpu: 2
  podTemplate:
    spec:
      containers:
        - name: flink-main-container
          env:
            - name: ENABLE_BUILT_IN_PLUGINS
              value: "flink-s3-fs-presto-1.20.1.jar"
  job:
    jarURI: local:///opt/flink/opt/flink-python-1.20.1.jar
    entryClass: "org.apache.flink.client.python.PythonDriver"
    args: [
    "-pyclientexec", "/usr/bin/python3",
    "-py", "/opt/flink/usr_jobs/postgres_to_redpanda.py"  # Main script to execute
  ]
    parallelism: 2
    upgradeMode: savepoint
    state: running
  ingress:
    template: "localhost/{{name}}(/|$)(.*)"
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/$2"